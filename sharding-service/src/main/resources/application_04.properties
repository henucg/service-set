## 公共表配置

# 指定数据源
spring.shardingsphere.datasource.names=sdb0,sdb1,sdb2

# 配置数据源0
spring.shardingsphere.datasource.sdb0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.sdb0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.sdb0.url=jdbc:mysql://127.0.0.1:3306/sharding_db_0?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.sdb0.username=root
spring.shardingsphere.datasource.sdb0.password=123456

# 配置数据源1
spring.shardingsphere.datasource.sdb1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.sdb1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.sdb1.url=jdbc:mysql://127.0.0.1:3306/sharding_db_1?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.sdb1.username=root
spring.shardingsphere.datasource.sdb1.password=123456

# 配置数据源2
spring.shardingsphere.datasource.sdb2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.sdb2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.sdb2.url=jdbc:mysql://127.0.0.1:3306/sharding_user?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.sdb2.username=root
spring.shardingsphere.datasource.sdb2.password=123456

# 指定库，表信息
spring.shardingsphere.sharding.tables.t_course.actual-data-nodes=sdb$->{0..1}.t_course_$->{0..1}

# 指定分库策略：根据course_status分库
# 数据库所有表都遵循此规则
# spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=course_id
# spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=sdb_${course_id%2}
# 只为数据库的t_course表做分库操作
spring.shardingsphere.sharding.tables.t_course.database-strategy.inline.sharding-column=course_status
spring.shardingsphere.sharding.tables.t_course.database-strategy.inline.algorithm-expression=sdb${course_status%2}

# 指定分表策略：根据course_id分表
spring.shardingsphere.sharding.tables.t_course.table-strategy.inline.sharding-column=course_id
spring.shardingsphere.sharding.tables.t_course.table-strategy.inline.algorithm-expression=t_course_${course_id%2}

# 指定主键生成算法
spring.shardingsphere.sharding.tables.t_course.key-generator.column=course_id
spring.shardingsphere.sharding.tables.t_course.key-generator.type=SNOWFLAKE

# 设置sharding_db.t_user专库专表
# 指定专库专表分布
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=sdb$->{2}.t_user
# 指定t_user表的主键以及生成策略
spring.shardingsphere.sharding.tables.t_user.key-generator.column=user_id
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE

# 设置t_dict为公共表
# 指定公共表分布
spring.shardingsphere.sharding.broadcast-tables=t_dict
# 指定公共表的主键以及生成策略
spring.shardingsphere.sharding.tables.t_dict.key-generator.column=dict_id
spring.shardingsphere.sharding.tables.t_dict.key-generator.type=SNOWFLAKE

# 设置一个实体类对应多张表
spring.main.allow-bean-definition-overriding=true

# SQL输出
spring.shardingsphere.props.sql.show=true